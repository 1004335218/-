实验目的：
掌握函数的定义和调用方法；理解递归函数的使用

实验要求：
能正确定义和调用函数。
能使用函数解决代码复用。
能编写递归函数
实验内容：
完成教材第五章练习

实验代码：
程序练习题5.1 提示：修改上次实验4的代码，用函数替代程序中输出部分。
程序练习题5.2 提示： def isOdd(n): 如果n是奇数： return True 否则： return False
#测试函数 def main(): while True: n = int( input(“请输入一个整数：”) if isOdd(n): 输出”n是偶数” else: 输出”n是奇数”
#运行测试函数，测试函数调用isOdd()函数 main()
程序练习题5.3 提示：使用eval()函数
程序练习题5.4 提示：参考教材129页实例，在函数的参数中使用带”*”号的参数。
程序练习题5.5 提示：下面的程序用来判断整数n是否为质数，在此基础上加上异常处理。 def isPrime(n): for k in range(2,n): if n%k == 0: return False return True
斐波拉契数列。 Fabric数列描述如下： F(n)={■(■(1& n=1)@■(1& n=2)@■(F(n-1)+F(n-2)&n>2))┤ 编写Fabric函数程序，用递归实现。
程序练习题5.7 提示：n个盘子的递归解法如下： step1: 从A柱移动n-1个盘子到B柱，借助C柱 step2: 移动A柱最后一个盘子到C柱 step3: 移动B柱的n-1个盘子到C柱，借助A柱 递归的边界就是n=1时，可以直接移动盘子。注意的是在Step1此时C柱是没有盘子；在step2此时仅移动一个盘子，可以直接移动；在Step3此时A柱是空的。

七段数码管问题。 在教材实例7的基础上改写代码，实现以下要求： 1）日期的每一个数字用不同颜色表示。 提示：0-9共有10个数字，对应10种不同颜色表示：'red', 'blue', 'yellow', 'gold', 'violet', 'purple', 'green', 'darkgreen', 'grey', 'orange'；只需要修改drawDigit()函数，添加功能使之实现每一个数字用不同颜色表示。 2）数码管的每一段用不同颜色表示。 提示：方法一：修改drawDigit()函数；方法二：修改drawLine()函数。

修改实例代码18.1，使koch曲线反向绘制，从直线开始，中间部分向下方绘制。 提示：参考教材实例8

实验总结：
通过这次学习我熟悉了python语言的开发环境IDLE，能够编辑，运行给定的代码。完成1.1-1.6的过程中我掌握了Python语言的基本语法，比如缩进是一个对初学者来说很重要的知识，缩进的错误会导致程序无法正常运行并报出unexpected indent的错误，而语法错误是 SyntaxError。完成1.7-1.8是我们使用了turtle库进行绘图观察了绘出图形，还对程序中的数据进行了修改绘出了不同的图形。
